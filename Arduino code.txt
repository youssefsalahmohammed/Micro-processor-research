// Buttons in each floor for calling the elevator
const int U1 = A0;
const int D1 = A1;
const int U2 = A2;
const int D2 = A3;
const int U3 = A4;
const int D3 = A5;

// Buttons in cabin for each floor
const int FL1 = A6;
const int FL2 = A7;
const int FL3 = A8;

// Leds in cabin to indicate the floor
const int Led1 = A9;
const int Led2 = A10;
const int Led3 = A11;

//Door sensors
const int O1 = A12;
const int O2 = A13;
const int O3 = A14;
const int DOORS[3] = {O1,O2,O3};

//Limit Switch sensors
const int L1 = 2;
const int L2 = 3;
const int L3 = 4;
const int LIMITS[3] = {L1,L2,L3};

//DC Motor         M1->HIGH  M2-LOW ==> elevation     M1->LOW  M2->HIGH ==> fall
const int enM = 5;
const int M1 = 6;     
const int M2= 7;

//Buzzer
const int Buzzer = 8;

void setup() {
  Serial.begin(9600);
  
  pinMode(U1,INPUT);
  pinMode(D1,INPUT);
  pinMode(U2,INPUT);
  pinMode(D2,INPUT);
  pinMode(U3,INPUT);
  pinMode(D3,INPUT);
  
  pinMode(FL1,INPUT);
  pinMode(FL2,INPUT);
  pinMode(FL3,INPUT);
  
  pinMode(Led1,OUTPUT);
  pinMode(Led2,OUTPUT);
  pinMode(Led3,OUTPUT);

  pinMode(O1, INPUT_PULLUP);  // INPUT_PULLUP to use interal pullup resistor
  pinMode(O2, INPUT_PULLUP);
  pinMode(O3, INPUT_PULLUP);

  pinMode(L1,INPUT);
  pinMode(L2,INPUT);
  pinMode(L3,INPUT);

  pinMode(enM,OUTPUT);
  pinMode(M1,OUTPUT);
  pinMode(M2,OUTPUT);
}

void loop() {
  if(digitalRead(U1)){     // check if the UP button in the first floor is pushed
    
    if(digitalRead(L1)){   // check if the elevator is already in the first floor
      Serial.println("elevator is already in the floor");
      return;
    }else{
     for(int i=0;i<sizeof(DOORS)/2;i++){
      if(digitalRead(DOORS[i])){   // check if any door is open
        Serial.println("a door is open elevator cannot reach user");
        digitalWrite(M1,LOW);
        digitalWrite(M2,LOW);
        return;
      }
     }
     digitalWrite(M1,HIGH);  // rotate motor to elevate
     digitalWrite(M2,LOW);
     while(true){
      
        if(digitalRead(L1)){  // check the limit switch if it is HIGH that means the elevator reached the floor
          digitalWrite(M1,LOW);  // stop the motor
          digitalWrite(M2,LOW);
          
          tone(Buzzer,1000);
          delay(1000);          // elevator arrival is indicated by a Buzzer
          noTone(Buzzer);
          delay(1000);
          
          digitalWrite(Led1,HIGH);  // the led inside the elevator is HIGH to indicate the floor
          digitalWrite(Led2,LOW);
          digitalWrite(Led3,LOW);
          break;
        }
        
     }
  }
  return;
}

if(digitalRead(D1)){    // check if the Down button in the first floor is pushed
    
    if(digitalRead(L1)){ // check if the elevator is already in the first floor
      Serial.println("elevator is already in the floor");
      return;
    }else{
     for(int i=0;i<sizeof(DOORS)/2;i++){
      if(digitalRead(DOORS[i])){
        Serial.println("a door is open elevator cannot reach user");
        digitalWrite(M1,LOW);
        digitalWrite(M2,LOW);
        return;
      }
     }
     digitalWrite(M1,LOW);  // rotate motor to fall
     digitalWrite(M2,HIGH);
     while(true){
      
        if(digitalRead(L1)){   // check the limit switch if it is HIGH that means the elevator reached the floor
          digitalWrite(M1,LOW);  // stop the motor
          digitalWrite(M2,LOW);
          
          tone(Buzzer,1000);
          delay(1000);          // elevator arrival is indicated by a Buzzer
          noTone(Buzzer);
          delay(1000);
          
          digitalWrite(Led1,HIGH);  // the led inside the elevator is HIGH to indicate the floor
          digitalWrite(Led2,LOW);
          digitalWrite(Led3,LOW);
          break;
        }
        
     }
  }
  return;
}
if(digitalRead(U2)){ // check if the UP button in the second floor is pushed
    
    if(digitalRead(L2)){  // check if the elevator is already in the second floor
      Serial.println("elevator is already in the floor");
      return;
    }else{
     for(int i=0;i<sizeof(DOORS)/2;i++){
      if(digitalRead(DOORS[i])){
        Serial.println("a door is open elevator cannot reach user");
        digitalWrite(M1,LOW);
        digitalWrite(M2,LOW);
        return;
      }
     }
     digitalWrite(M1,HIGH);  // rotate motor to elevate
     digitalWrite(M2,LOW);
     while(true){
      
        if(digitalRead(L2)){  //check the limit switch if it is HIGH that means the elevator reached the floor
          digitalWrite(M1,LOW);  // stop the motor
          digitalWrite(M2,LOW);
          
          tone(Buzzer,1000);
          delay(1000);          // elevator arrival is indicated by a Buzzer
          noTone(Buzzer);
          delay(1000);
          
          digitalWrite(Led1,LOW);  // the led inside the elevator is HIGH to indicate the floor
          digitalWrite(Led2,HIGH);
          digitalWrite(Led3,LOW);
          break;
        }
        
     }
  }
  return;
}

if(digitalRead(D2)){  // check if the Down button in the second floor is pushed
    
    if(digitalRead(L2)){  // check if the elevator is already in the second floor
      Serial.println("elevator is already in the floor");
      return;
    }else{
     for(int i=0;i<sizeof(DOORS)/2;i++){
      if(digitalRead(DOORS[i])){
        Serial.println("a door is open elevator cannot reach user");
        digitalWrite(M1,LOW);
        digitalWrite(M2,LOW);
        return;
      }
     }
     digitalWrite(M1,LOW);  // rotate motor to fall
     digitalWrite(M2,HIGH);
     while(true){
      
        if(digitalRead(L2)){  //check the limit switch if it is HIGH that means the elevator reached the floor
          digitalWrite(M1,LOW);  // stop the motor
          digitalWrite(M2,LOW);
          
          tone(Buzzer,1000);
          delay(1000);          // elevator arrival is indicated by a Buzzer
          noTone(Buzzer);
          delay(1000);
          
          digitalWrite(Led1,LOW);  // the led inside the elevator is HIGH to indicate the floor
          digitalWrite(Led2,HIGH);
          digitalWrite(Led3,LOW);
          break;
        }
        
     }
  }
  return;
}
if(digitalRead(U3)){  // check if the UP button in the third floor is pushed
    
    if(digitalRead(L3)){  // check if the elevator is already in the third floor
      Serial.println("elevator is already in the floor");
      return;
    }else{
     for(int i=0;i<sizeof(DOORS)/2;i++){
      if(digitalRead(DOORS[i])){
        Serial.println("a door is open elevator cannot reach user");
        digitalWrite(M1,LOW);
        digitalWrite(M2,LOW);
        return;
      }
     }
     digitalWrite(M1,HIGH);  // rotate motor to elevate
     digitalWrite(M2,LOW);
     while(true){
      
        if(digitalRead(L3)){  // check the limit switch if it is HIGH that means the elevator reached the floor
          digitalWrite(M1,LOW);  // stop the motor
          digitalWrite(M2,LOW);
          
          tone(Buzzer,1000);
          delay(1000);          // elevator arrival is indicated by a Buzzer
          noTone(Buzzer);
          delay(1000);
          
          digitalWrite(Led1,LOW);  // the led inside the elevator is HIGH to indicate the floor
          digitalWrite(Led2,LOW);
          digitalWrite(Led3,HIGH);
          break;
        }
        
     }
  }
  return;
}

if(digitalRead(D3)){  // check if the Down button in the third floor is pushed
    
    if(digitalRead(L3)){  // check if the elevator is already in the third floor
      Serial.println("elevator is already in the floor");
      return;
    }else{
     for(int i=0;i<sizeof(DOORS)/2;i++){
      if(digitalRead(DOORS[i])){
        Serial.println("a door is open elevator cannot reach user");
        digitalWrite(M1,LOW);
        digitalWrite(M2,LOW);
        return;
      }
     }
     digitalWrite(M1,LOW);  // rotate motor to fall
     digitalWrite(M2,HIGH);
     while(true){
      
        if(digitalRead(L3)){  //check the limit switch if it is HIGH that means the elevator reached the floor
          digitalWrite(M1,LOW);  // stop the motor
          digitalWrite(M2,LOW);
          
          tone(Buzzer,1000);
          delay(1000);          // elevator arrival is indicated by a Buzzer
          noTone(Buzzer);
          delay(1000);
          
          digitalWrite(Led1,LOW);  // the led inside the elevator is HIGH to indicate the floor
          digitalWrite(Led2,LOW);
          digitalWrite(Led3,HIGH);
          break;
        }
        
     }
  }
  return;
}

if(digitalRead(FL1)){   // check if the button for first floor in the elevator is pushed
  if(digitalRead(L1){   // check if the elevator is already in the first floor
    Serial.println("elevator is already in the floor");
    return;
  }
  else{
     digitalWrite(M1,LOW);  // rotate motor to fall
     digitalWrite(M2,HIGH);
     
     while(true){
      if(digitalRead(L1){ //check the limit switch if it is HIGH that means the elevator reached the floor
         digitalWrite(M1,LOW);  //  motor Stop
         digitalWrite(M2,LOW);

         digitalWrite(Led1,HIGH);  // the led inside the elevator is HIGH to indicate the floor
         digitalWrite(Led2,LOW);
         digitalWrite(Led3,LOW);

         tone(Buzzer,1000);
         delay(1000);          // elevator arrival is indicated by a Buzzer
         noTone(Buzzer);
         delay(1000);
         break;
      }
     }
  }
  return;
}

if(digitalRead(FL2)){     // check if the button for second floor in the elevator is pushed
  if(digitalRead(L2){     //check the elevator is already in the second floor
    Serial.println("elevator is already in the floor");
    return;
  }
  else{
     if(digitalRead(L1)){     // if elevator is in first floor motor elevate
      
     digitalWrite(M1,HIGH);  // rotate motor to elevate
     digitalWrite(M2,LOW);
     
     }
     else if(digitalRead(L3){  // if elevator is in third floor motor fall
      
        digitalWrite(M1,LOW);  //rotate motor to fall
        digitalWrite(M2,HIGH);
      }
     while(true){
      if(digitalRead(L2){  //check the limit switch if it is HIGH that means the elevator reached the floor
         digitalWrite(M1,LOW);  //  motor Stop
         digitalWrite(M2,LOW);

         digitalWrite(Led1,LOW);  // the led inside the elevator is HIGH to indicate the floor
         digitalWrite(Led2,HIGH);
         digitalWrite(Led3,LOW);

         tone(Buzzer,1000);
         delay(1000);          // elevator arrival indicated by a Buzzer
         noTone(Buzzer);
         delay(1000);
         break;
      }
     }
  }
  return;
}

if(digitalRead(FL3)){ // check if the button for third floor in the elevator is pushed
  if(digitalRead(L3){  //check if the elevator is already in the third floor
    Serial.println("elevator is already in the floor");
    return;
  }
  else{
     digitalWrite(M1,HIGH);  // rotate motor to elevate
     digitalWrite(M2,LOW);
     
     while(true){
      if(digitalRead(L3){ //check the limit switch if it is HIGH that means the elevator reached the floor
         digitalWrite(M1,LOW);  //  motor Stop
         digitalWrite(M2,LOW);

         digitalWrite(Led1,LOW);  // the led inside the elevator is HIGH to indicate the floor
         digitalWrite(Led2,LOW);
         digitalWrite(Led3,HIGH);

         tone(Buzzer,1000);
         delay(1000);          // elevator arrival indicated by a Buzzer
         noTone(Buzzer);
         delay(1000);
         break;
      }
     }
  }
  return;
}
}